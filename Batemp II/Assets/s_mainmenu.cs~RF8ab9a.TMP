using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.IO;

[System.Serializable]
public struct s_leveldat
{
    public s_leveldat(string name, bool completed, int highTemperatureScore)
    {
        this.completed = completed;
        this.name = name;
        this.highTemperatureScore = highTemperatureScore;
    }
    public string name;
    public bool completed;
    public int highTemperatureScore;
}

[System.Serializable]
public struct s_lev
{
    s_lev(List<s_leveldat> levels)
    {
        this.levels = levels;
    }
    public List<s_leveldat> levels;
}

public class s_mainmenu : MonoBehaviour
{
    public enum DIFFICULTY_MODES
    {
        EASY,
        NORMAL,
        HARD,
        INSANE
    }
    public static DIFFICULTY_MODES difficulty = DIFFICULTY_MODES.NORMAL;

    public enum MENUSTATE
    {
        MENU,
        LEVEL_SELECT,
        INSTRUCTIONS,
        OPTIONS
    }
    MENUSTATE menu;
    public GUIStyle gstyle;
    int level = 0;
    const int padding = 10;
    public static int selectedlevel = 0;
    public List<TextAsset> levels = new List<TextAsset>();
    bool DEBUG_MODE = false;

    void Start()
    {
        level = PlayerPrefs.GetInt("CurrentLevel");
    }

    public bool DrawButton(Rect rect, string n)
    {
        if (GUI.Button(rect, n, gstyle))
        {
            return true;
        }
        return false;
    }

    private void OnGUI()
    {
        switch (menu)
        {
            case MENUSTATE.MENU:

                if (DrawButton(new Rect(20, 20, 50, 20), "Play"))
                {
                    UnityEngine.SceneManagement.SceneManager.LoadScene(1);
                }
                if (DEBUG_MODE)
                {
                    if (DrawButton(new Rect(20, (20 * 2) + padding, 150, 20), "Debug: On"))
                    {
                        DEBUG_MODE = false;
                    }
                }
                else {
                    if (DrawButton(new Rect(20, (20 * 2) + padding, 150, 20), "Debug: Off"))
                    {
                        DEBUG_MODE = true;
                    }
                }

                if (DrawButton(new Rect(20, (20 * 4) + padding, 150, 20), "Instructions"))
                {
                    menu = MENUSTATE.INSTRUCTIONS;
                }
                if (DrawButton(new Rect(20, (20 * 6) + padding, 150, 20), "Level Select"))
                {
                    menu = MENUSTATE.LEVEL_SELECT;
                }
                if (DrawButton(new Rect(20, (20 * 8) + padding, 150, 20), "Options"))
                {
                    menu = MENUSTATE.OPTIONS;
                }
                break;

            case MENUSTATE.OPTIONS:
                string currentdif = "";
                string restoftext = "Current difficulty: ";

                if(DrawButton(new Rect(20, 2, 150, 20), "Click to change difficulty"))
                {
                    difficulty += 1;
                    if (difficulty > DIFFICULTY_MODES.INSANE)
                        difficulty = DIFFICULTY_MODES.EASY;
                }

                switch (difficulty)
                {
                    case DIFFICULTY_MODES.EASY:
                        currentdif = "Easy - Temperature limit: 60";
                        break;

                    case DIFFICULTY_MODES.NORMAL:
                        currentdif = "Normal - Temperature limit: 40";
                        break;

                    case DIFFICULTY_MODES.HARD:
                        currentdif = "Hard  - Temperature limit: 30";
                        break;

                    case DIFFICULTY_MODES.INSANE:
                        currentdif = "Insane - Same as hard but once you loose you restart from square 1.";
                        break;

                }

                GUI.Label(new Rect(20, 50, 250, 500),
                    restoftext + currentdif);

                if (GUI.Button(new Rect(20, (20 * 4), 150, 20), "Back"))
                {
                    menu = MENUSTATE.MENU;
                }
                break;

            case MENUSTATE.LEVEL_SELECT:
                if (difficulty != DIFFICULTY_MODES.INSANE)
                {
                    int i = 0;
                    for (i = 0; i < levels.Count; i++)
                    {
                        if (DEBUG_MODE)
                        {
                            if (GUI.Button(new Rect(20, (20 * i) + padding, 150, 20), levels[i].name))
                            {
                                selectedlevel = i;
                                UnityEngine.SceneManagement.SceneManager.LoadScene(1);
                            }
                            continue;
                        }

                        if (i > level)
                        {
                            if (GUI.Button(new Rect(20, (20 * i) + padding, 150, 20), levels[i].name + " (LOCKED)"))
                            { }
                        }
                        else
                        {
                            if (GUI.Button(new Rect(20, (20 * i) + padding, 150, 20), levels[i].name))
                            {
                                selectedlevel = i;
                                UnityEngine.SceneManagement.SceneManager.LoadScene(1);
                            }
                        }
                    }
                    i++;
                }
                else
                {
                    GUI.Label(new Rect(20, 20, 250, 500),
                        "You can't select any levels on the insane difficulty. \n" +
                        "You will need to play them all in one go I'm afraid...");
                }

                if (GUI.Button(new Rect(20, (20 * 25) + padding, 150, 20), "Back"))
                {
                    menu = MENUSTATE.MENU;
                }
                break;

            case MENUSTATE.INSTRUCTIONS:
                
                GUI.Label(new Rect(20, 20, 250, 500),
                    "Objective: You need to maintain the temperature around -10 to 10 degrees celsius" + "\n" +
                    "Left click - Place blocks" + "\n"
                     + "Right click - Remove blocks" + "\n"
                     + "You cannot remove lava blocks or dark ice." + "\n"
                     + "Balls can change area temperature by hitting walls." + "\n"
                     + "Same temperature ball will pass through same temperature block." + "\n"
                     + "You can change the temperature of the balls by having them hit a hot or cold block." + "\n"
                    );
                if (GUI.Button(new Rect(20, 600, 150, 20), "Back"))
                {
                    menu = MENUSTATE.MENU;
                }
                break;
        }
    }
}
